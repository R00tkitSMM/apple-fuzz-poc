#include <Foundation/Foundation.h>
#include <Foundation/NSURL.h>
#include <dlfcn.h>
#include <stdint.h>
#include <sys/shm.h>
#include <dirent.h>

#import <AppKit/AppKit.h>
#import <CoreText/CoreText.h>
#import <CoreGraphics/CoreGraphics.h>

int main(int argc, const char *argv[]) 
{

    NSString* path = [NSString stringWithUTF8String:argv[1]];
    NSData* data = [NSData dataWithContentsOfFile:path];    
        
    // Create an image source from NSData; no options.
    CGImageSourceRef myImageSource = CGImageSourceCreateWithData((CFDataRef)data, NULL);
   
    // Make sure the image source exists before continuing.
    if (myImageSource != NULL)
    {
        // Package the integer as a  CFNumber object. Using CFTypes allows you
        // to more easily create the options dictionary later.
        int imageSize = 1000;  
        CFNumberRef thumbnailSize = CFNumberCreate(NULL, kCFNumberIntType, &imageSize);

        CFStringRef       myKeys[3];
        CFTypeRef         myValues[3];
 
        // Set up the thumbnail options.
        myKeys[0] = kCGImageSourceCreateThumbnailWithTransform;
        myValues[0] = (CFTypeRef)kCFBooleanTrue;
        myKeys[1] = kCGImageSourceCreateThumbnailFromImageIfAbsent;
        myValues[1] = (CFTypeRef)kCFBooleanTrue;
        myKeys[2] = kCGImageSourceThumbnailMaxPixelSize;
        myValues[2] = (CFTypeRef)thumbnailSize;
 
        CFDictionaryRef myOptions = CFDictionaryCreate(NULL, (const void **) myKeys,
                        (const void **) myValues, 3,
                        &kCFTypeDictionaryKeyCallBacks,
                        &kCFTypeDictionaryValueCallBacks);
 
        CGImageRef myThumbnailImage = CGImageSourceCreateThumbnailAtIndex(myImageSource, 0, myOptions);
    }
}